{
    "pipes": [],
    "interfaces": [
        {
            "name": "Actionbar",
            "id": "interface-Actionbar-d01ecf8926d90a7992c38f5f170264c7",
            "file": "src/app/models/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StorybookCard {\n\n    actionbar?: Actionbar;\n    card : Card;\n}\n\nexport interface Actionbar {\n    position : AlignType;\n    rounded : Boolean;\n    type :  contextType;\n}\n\nexport interface Card {\n    id: string;\n    title: string;\n    type: cardType;\n    imageSrc?: string;\n    altImageSrc?: string;\n}\n\nexport declare type AlignType = 'left' | 'center' | 'right';\n\nexport declare type cardType = 'small-card' | 'large-card' | 'medium-card';\n\nexport declare type contextType = 'social' | 'cart';\n",
            "properties": [
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlignType",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "rounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "contextType",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Card",
            "id": "interface-Card-d01ecf8926d90a7992c38f5f170264c7",
            "file": "src/app/models/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StorybookCard {\n\n    actionbar?: Actionbar;\n    card : Card;\n}\n\nexport interface Actionbar {\n    position : AlignType;\n    rounded : Boolean;\n    type :  contextType;\n}\n\nexport interface Card {\n    id: string;\n    title: string;\n    type: cardType;\n    imageSrc?: string;\n    altImageSrc?: string;\n}\n\nexport declare type AlignType = 'left' | 'center' | 'right';\n\nexport declare type cardType = 'small-card' | 'large-card' | 'medium-card';\n\nexport declare type contextType = 'social' | 'cart';\n",
            "properties": [
                {
                    "name": "altImageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "cardType",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "StorybookCard",
            "id": "interface-StorybookCard-d01ecf8926d90a7992c38f5f170264c7",
            "file": "src/app/models/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StorybookCard {\n\n    actionbar?: Actionbar;\n    card : Card;\n}\n\nexport interface Actionbar {\n    position : AlignType;\n    rounded : Boolean;\n    type :  contextType;\n}\n\nexport interface Card {\n    id: string;\n    title: string;\n    type: cardType;\n    imageSrc?: string;\n    altImageSrc?: string;\n}\n\nexport declare type AlignType = 'left' | 'center' | 'right';\n\nexport declare type cardType = 'small-card' | 'large-card' | 'medium-card';\n\nexport declare type contextType = 'social' | 'cart';\n",
            "properties": [
                {
                    "name": "actionbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Actionbar",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Card",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Task",
            "id": "interface-Task-4b717cdc52013c01b91d4ca2b3ebc539",
            "file": "src/app/models/task.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Task {\n    id:string;\n    title:string;\n    state:string;\n    color?: string;\n    background?:string;\n}\n\n",
            "properties": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Task",
            "id": "interface-Task-4e42a4fe5b134bbe5d980d78cf2dbb1c-1",
            "file": "src/app/models/taskList.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Task {\n    id:string;\n    title:string;\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Task-1"
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ActionbarComponent",
            "id": "component-ActionbarComponent-2ebc92e6e436a26f72e0b3cc48b3bc03",
            "file": "src/app/actionbar/actionbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "actionbar",
            "styleUrls": [
                "./actionbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./actionbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Actionbar"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickAction",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "social",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "social",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Actionbar } from '../models/models';\nimport { AlignType } from '../models/models';\n\n@Component({\n  selector: 'actionbar',\n  templateUrl: './actionbar.component.html',\n  styleUrls: ['./actionbar.component.scss']\n})\nexport class ActionbarComponent implements OnInit {\n\n  //STORYBOOK CONFIG\n  @Input() actionbar: Actionbar;    \n\n  @Output() \n  onClickAction = new EventEmitter<Event>();\n  \n  ngOnInit(): void {\n    \n  }\n  \n  onClick(social : any){\n    console.log(social);\n    this.onClickAction.emit(social);\n  }\n\n  public get classes(): string[] {\n    const mode = this.actionbar?.rounded ? 'actionbar--rounded' : 'actionbar--flat';\n    return [ `actionbar--${this.actionbar?.position}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".action-container {\n    display: flex;\n    flex-direction: row;\n    padding: 10px;\n\n    .link-container {\n\n        display: flex;\n\n    }\n    .social-svg {    \n        padding : 0px;\n        margin: 0px;\n        width: 40px;\n        height: 40px;\n    }\n    .svg {\n\n        width: 100%;\n        padding: 5px;\n    }\n\n    .social-svg :hover {\n        background-color: cornsilk;\n        border: solid 1px brown;        \n    }\n}\n\n.actionbar--center {\n    justify-content: center;\n}\n\n.actionbar--right {\n    justify-content: right;\n}\n\n.actionbar--left {\n   justify-content: start;\n}\n\n.actionbar--rounded {\n\n    .svg {\n        border-radius: 50%;\n    }\n}\n\n.actionbar--flat {\n\n    .svg {\n        border-radius: none;\n    }\n}\n",
                    "styleUrl": "./actionbar.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 28
                    }
                }
            },
            "templateData": "<div class=\"action-container\" [ngClass]=\"classes\">\n        <div class=\"link-container\" *ngIf='actionbar.type == \"social\"'>\n                <a class=\"social-svg\" (click)=\"onClick('facebook')\"><img class=\"svg\"\n                                src=\"../../assets/5365678_fb_facebook_facebook logo_icon.svg\" alt=\"facebook logo\"></a>\n                <a class=\"social-svg\" (click)=\"onClick('tumblr')\"><img class=\"svg\"\n                                src=\"../../assets/5296511_network_social network_tumblr_tumblr logo_icon.svg\"\n                                alt=\"tumblr logo\"></a>\n                <a class=\"social-svg\" (click)=\"onClick('linkedin')\"><img class=\"svg\"\n                                src=\"../../assets/5296501_linkedin_network_linkedin logo_icon.svg\"\n                                alt=\"linkedin logo\"></a>\n        </div>\n        <div class=\"link-container\" *ngIf='actionbar.type == \"cart\"'>\n                <a class=\"social-svg\" (click)=\"onClick('cart')\"><img class=\"svg\" src=\"../../assets/shopping-cart.png\"></a>\n                <a class=\"social-svg\" (click)=\"onClick('bin')\"><img class=\"svg\" src=\"../../assets/bin.png\" alt=\"tumblr logo\"></a>\n        </div>\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8d48f3426a6ab3de7e6749fbc1af4ad6",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'mywebapp'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mywebapp';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n<div class=\"d-flex justify-content-center\">\n    <h2>GOODMORNING THIS IS A TEST</h2>\n</div>\n<div class=\"mt-2\">\n    <app-task-list></app-task-list>\n</div>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "StorybookCardComponent",
            "id": "component-StorybookCardComponent-16182d3f8c06a1bbc29c1890cfc923e6",
            "file": "src/app/storybook-card/storybook-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-storybook-card",
            "styleUrls": [
                "./storybook-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./storybook-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Actionbar"
                },
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "StorybookCard"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickAction",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "openCardClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCard",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Actionbar, StorybookCard } from '../models/models'\n@Component({\n  selector: 'app-storybook-card',\n  templateUrl: './storybook-card.component.html',\n  styleUrls: ['./storybook-card.component.scss']\n})\nexport class StorybookCardComponent implements OnInit {\n\n  //child input\n  @Input() actionbar: Actionbar;\n\n  @Input() card: StorybookCard;\n\n  @Output()\n  onClickAction = new EventEmitter<Event>();\n\n  @Output()\n  openCardClick = new EventEmitter<Event>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  openCard(id : any) {\n    console.log('Hello there... General Kenoby');\n    this.openCardClick.emit(<any>'Hello there... General Kenoby' + id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.card-header {\n    font-size: large;\n    font-weight: bold;\n}\n.card-body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-left: 0px;\n    padding-right: 0px;\n}\n.card {\n     box-shadow:3px 6px #88888887;      \n}\n\n.card-img {\n    margin:auto;\n    text-align: center;\n    width: 100%;\n    height: 90%;\n}\n\n.large-card {\n    width: 500px;\n    height: 500px;\n}\n\n.small-card {\n    width: 220px;\n    height: 250px;\n\n    .card-header {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        font-size: medium;\n    }\n\n    .card-img {\n\n        width: 95%;\n        \n    }\n}\n\n.medium-card {\n    width: 350px;\n    height: 400px;\n}\n",
                    "styleUrl": "./storybook-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row card {{card.type}}\">\n    <div class=\"col-md-12 card-header\">\n        {{card.title}}\n    </div>\n    <div class=\"col-md-12 card-body\">\n        <img class=\"card-img\"  (click)='openCard(card.id)' src=\"{{card.imageSrc}}\" alt={{card.altImageSrc}}>\n    </div>\n        \n    <div *ngIf='card.type != \"small-card\"' class=\"col-md-12 card-footer\">\n        <actionbar [actionbar]='actionbar' (onClickAction)=\"onClickAction.emit($event)\"></actionbar>\n    </div>\n</div>\n"
        },
        {
            "name": "TaskComponent",
            "id": "component-TaskComponent-4e611e28cae5c584bfed8439d684569e",
            "file": "src/app/task/task.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task",
            "styleUrls": [
                "./task.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./task.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any"
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any"
                },
                {
                    "name": "task",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onArchive",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPin",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component,OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit {\n\n  @Input() task: any;\n\n  @Input() color: any;\n\n  @Input() background: any;\n  \n  @Output()\n  onPinTask = new EventEmitter<Event>();\n\n  @Output() \n  onArchiveTask = new EventEmitter<Event>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onPin(id: any) {\n      this.onPinTask.emit(id);\n  }\n\n  onArchive(id: any) {\n    this.onArchiveTask.emit(id);\n\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".list-item {\n    display: flex;\n    flex-direction: row;\n    border-radius: 20px;\n    align-items: center;\n    border: 2px solid black;\n    padding: 10px 15px;\n}\n.title-input {\n    background-color: rgba(0,0,0,0);\n    border: none; \n}\n.checkbox-container {\n    display: flex;\n    margin-left:auto;\n    margin-right: 0px;\n\n    input {\n        width: 20px;\n        height: 20px;\n    }\n}\n.actions {\n    display: flex;\n    background: none;\n    justify-content: center;\n    align-items: center;\n}\n\n.img-star {\n    width: 22px;\n    height: 22px;\n}\n\n.star :hover {\n    background: lightblue;\n}\n",
                    "styleUrl": "./task.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row\">\n    <div class=\"col-9 list-item {{ task?.state }}\"\n        [ngStyle]=\"{'border-color':task.color , 'background-color':task.background}\">\n\n        <div class=\"col-md-6 title\">\n            <input type=\"text\" class=\"title-input\" [value]=\"task?.title\" readonly=\"true\" placeholder=\"Input title\" />\n        </div>\n        <div class=\"col-md-3 checkbox-container\">\n            <div class=\"checkbox-container\">\n                <label class=\"checkbox\">\n                    <input type=\"checkbox\" [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\" disabled=\"true\"\n                        name=\"checked\" />\n                    <span class=\"checkbox-custom\" (click)=\"onArchive(task.id)\"></span>\n                </label>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"col-2 actions\">\n        <a class=\"star\" *ngIf=\"task?.state !== 'TASK_ARCHIVED'\" (click)=\"onPin(task.id)\">\n            <img class=\"img-star \" src=\"../../assets/star.svg\" alt=\"SVG logo\" />\n        </a>\n    </div>\n</div>"
        },
        {
            "name": "TaskListComponent",
            "id": "component-TaskListComponent-cbe54e0fde6f694863b1d7be963d2797",
            "file": "src/app/task-list/task-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task-list",
            "styleUrls": [
                "./task-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./task-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Checks if it's in loading state",
                    "description": "<p>Checks if it&#39;s in loading state</p>\n",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "tasks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The list of tasks",
                    "description": "<p>The list of tasks</p>\n",
                    "line": 34,
                    "type": "[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEvent to change the task to archived",
                    "description": "<p>Event to change the task to archived</p>\n",
                    "line": 53,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEvent to change the task to pinned",
                    "description": "<p>Event to change the task to pinned</p>\n",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "tasksInOrder",
                    "defaultValue": "[\n    {id: '1' , title:'task1', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)' },\n    {id: '2' , title:'task2', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)' },\n    {id: '3' , title:'task3', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '4' , title:'task4', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '5' , title:'task5', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '6' , title:'task6', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '7' , title:'task7', state:'TASK_PINNED', color:'blue' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '8' , title:'task8', state:'TASK_PINNED', color:'blue' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n   \n   ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Task[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Task } from '../models/task.model';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n\n  tasksInOrder: Task[] = [\n    {id: '1' , title:'task1', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)' },\n    {id: '2' , title:'task2', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)' },\n    {id: '3' , title:'task3', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '4' , title:'task4', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '5' , title:'task5', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '6' , title:'task6', state:'TASK_INBOX', color:'black' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '7' , title:'task7', state:'TASK_PINNED', color:'blue' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n    {id: '8' , title:'task8', state:'TASK_PINNED', color:'blue' ,background : 'rgba(100, 100 , 100 , 0.6)'},\n   \n   ];\n \n\n  /** The list of tasks */\n  @Input()\n  set tasks(arr: Task[]) {\n    this.tasksInOrder = [\n      ...arr.filter(t => t.state === 'TASK_PINNED'),\n      ...arr.filter(t => t.state !== 'TASK_PINNED'),\n    ];\n  }\n\n  \n  /** Checks if it's in loading state */\n  @Input() loading = false;\n\n  /** Event to change the task to pinned */\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onPinTask = new EventEmitter<Event>();\n\n  /** Event to change the task to archived */\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onArchiveTask = new EventEmitter<Event>();\n\n\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper-message{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}",
                    "styleUrl": "./task-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "tasks": {
                    "name": "tasks",
                    "setSignature": {
                        "name": "tasks",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "arr",
                                "type": "Task[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "rawdescription": "The list of tasks",
                        "description": "<p>The list of tasks</p>\n",
                        "jsdoctags": [
                            {
                                "name": "arr",
                                "type": "Task[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"list-items\">\n    <div *ngIf=\"tasksInOrder.length > 0 && !loading\">\n        <div class=\"m-2\"> List of task </div>\n        <app-task *ngFor=\"let task of tasksInOrder\" class=\"m-2\" [task]=\"task\" (onArchiveTask)=\"onArchiveTask.emit($event)\"\n            (onPinTask)=\"onPinTask.emit($event)\">\n        </app-task>\n    </div>\n    <div *ngIf=\"tasksInOrder.length === 0 && !loading\" class=\"wrapper-message\">\n        <img class=\"check-svg\" src=\"../../assets/check.svg\" alt=\"SVG logo\" />\n        <div class=\"title-message\">You have no tasks</div>\n        <div class=\"subtitle-message\">Sit back and relax</div>\n    </div>\n    <div *ngIf=\"loading\">\n        <div *ngFor=\"let i of [1, 2, 3, 4, 5, 6]\" class=\"loading-item\">\n            <span class=\"glow-checkbox\"></span>\n            <span class=\"glow-text\"> <span>Loading</span> <span>cool</span> <span>state</span> </span>\n        </div>\n    </div>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-9cf18aac5d0c4a3074c5701f9fad0549",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskComponent } from './task/task.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { StorybookCardComponent } from './storybook-card/storybook-card.component';\nimport { ActionbarComponent } from './actionbar/actionbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent,\n    TaskListComponent,\n    StorybookCardComponent,\n    ActionbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ActionbarComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "StorybookCardComponent"
                        },
                        {
                            "name": "TaskComponent"
                        },
                        {
                            "name": "TaskListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3c1d721cfd0753406a1cfde101c59380",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/actionbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onClickAction : action('onClickAction'),\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onPinTask: action('onPinTask'),\n  onArchiveTask: action('onArchiveTask'),\n}"
            },
            {
                "name": "Archived",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BaseCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/storybookCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "cardWithRightAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/storybookCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/actionbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tasklist.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tasklist.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "LargeImageCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/storybookCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "leftRoundedCart",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/actionbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tasklist.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoImageCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/storybookCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Pinned",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "rightFlat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/actionbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/actionbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ActionbarComponent>",
                "defaultValue": "(args: ActionbarComponent) => ({\n  props: {\n    ...args,\n    onClickAction : actionsData.onClickAction,\n  }, \n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/storybookCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StorybookCard>",
                "defaultValue": "(args: StorybookCard) => ({\n  props: {\n    ...args,\n    onClickAction: ActionbarStories.actionsData.onClickAction,\n    openCardClick: action('openCardClick'),\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TaskComponent>",
                "defaultValue": "args => ({\n  props: {\n    ...args,\n    onPinTask: actionsData.onPinTask,\n    onArchiveTask: actionsData.onArchiveTask,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tasklist.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TaskListComponent>",
                "defaultValue": "args => ({\n    props: {\n        ...args,\n        onPinTask: TaskStories.actionsData.onPinTask,\n        onArchiveTask: TaskStories.actionsData.onArchiveTask,\n    },\n})"
            },
            {
                "name": "WithPinnedTasks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tasklist.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AlignType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"center\" | \"right\"",
                "file": "src/app/models/models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "cardType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small-card\" | \"large-card\" | \"medium-card\"",
                "file": "src/app/models/models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "contextType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"social\" | \"cart\"",
                "file": "src/app/models/models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/actionbar.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/actionbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onClickAction : action('onClickAction'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/actionbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "leftRoundedCart",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/actionbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "rightFlat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/actionbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/actionbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ActionbarComponent>",
                    "defaultValue": "(args: ActionbarComponent) => ({\n  props: {\n    ...args,\n    onClickAction : actionsData.onClickAction,\n  }, \n})"
                }
            ],
            "src/stories/task.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onPinTask: action('onPinTask'),\n  onArchiveTask: action('onArchiveTask'),\n}"
                },
                {
                    "name": "Archived",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Pinned",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TaskComponent>",
                    "defaultValue": "args => ({\n  props: {\n    ...args,\n    onPinTask: actionsData.onPinTask,\n    onArchiveTask: actionsData.onArchiveTask,\n  },\n})"
                }
            ],
            "src/stories/storybookCard.stories.ts": [
                {
                    "name": "BaseCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/storybookCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "cardWithRightAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/storybookCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LargeImageCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/storybookCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoImageCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/storybookCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/storybookCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StorybookCard>",
                    "defaultValue": "(args: StorybookCard) => ({\n  props: {\n    ...args,\n    onClickAction: ActionbarStories.actionsData.onClickAction,\n    openCardClick: action('openCardClick'),\n  }\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/tasklist.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tasklist.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tasklist.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tasklist.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tasklist.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TaskListComponent>",
                    "defaultValue": "args => ({\n    props: {\n        ...args,\n        onPinTask: TaskStories.actionsData.onPinTask,\n        onArchiveTask: TaskStories.actionsData.onArchiveTask,\n    },\n})"
                },
                {
                    "name": "WithPinnedTasks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tasklist.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/models/models.ts": [
                {
                    "name": "AlignType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"center\" | \"right\"",
                    "file": "src/app/models/models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "cardType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small-card\" | \"large-card\" | \"medium-card\"",
                    "file": "src/app/models/models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "contextType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"social\" | \"cart\"",
                    "file": "src/app/models/models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/actionbar/actionbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/models/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Actionbar",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StorybookCard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/task.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/taskList.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/storybook-card/storybook-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/task-list/task-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskListComponent",
                "coveragePercent": 50,
                "coverageCount": "4/8",
                "status": "medium"
            },
            {
                "filePath": "src/app/task/task.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/actionbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/actionbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/actionbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "leftRoundedCart",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/actionbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rightFlat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/actionbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/storybookCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BaseCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/storybookCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cardWithRightAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/storybookCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeImageCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/storybookCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoImageCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/storybookCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Archived",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pinned",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tasklist.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tasklist.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tasklist.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tasklist.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tasklist.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPinnedTasks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}